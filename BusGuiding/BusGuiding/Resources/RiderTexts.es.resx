<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArrivedAtDestinationAlert" xml:space="preserve">
    <value>¡Has llegado a destino! Gracias por usar BusGuiding.</value>
  </data>
  <data name="CancelGuidingConfirmation" xml:space="preserve">
    <value>¿Quieres cancelar esta ruta?</value>
  </data>
  <data name="ErrorMessagePhase" xml:space="preserve">
    <value>Lo sentimos, ha ocurrido un error técnico durante la fase {0}</value>
  </data>
  <data name="GeocaliseButtonHelpText" xml:space="preserve">
    <value>Pulsa para buscar la parada mas cercana en base a la posición GPS de tu móvil.</value>
  </data>
  <data name="GeolocationError" xml:space="preserve">
    <value>No se ha podido geolocalizar. Por favor, prueba otra vez.</value>
  </data>
  <data name="NotificationPh1Incoming" xml:space="preserve">
    <value>Tu autobús está llegando a la parada de origen, prepárate para subir.</value>
  </data>
  <data name="NotificationPh1InTransit" xml:space="preserve">
    <value>Autobús localizado, se encuentra dirigiendose a la parada de origen.</value>
  </data>
  <data name="NotificationPh2IncomingDestination" xml:space="preserve">
    <value>Tu autobús está llegando a la parada final, prepárate para bajar.</value>
  </data>
  <data name="NotificationPh2IntransitDestination" xml:space="preserve">
    <value>Tu autobús está de camino a la parada final, prepárate para bajar.</value>
  </data>
  <data name="NotificationTitleRouteUpdate" xml:space="preserve">
    <value>Actualización de ruta</value>
  </data>
  <data name="P2-EnterOriginStopLabel" xml:space="preserve">
    <value>Por favor, introduce el código de la parada origen o pulsa en geolocalizar.</value>
  </data>
  <data name="P2-Title" xml:space="preserve">
    <value>Parada de origen</value>
  </data>
  <data name="P3-SelectRoute" xml:space="preserve">
    <value>Por favor, selecciona la línea que quieres coger.</value>
  </data>
  <data name="P3-SelectRouteHeader" xml:space="preserve">
    <value>Líneas disponibles en esta parada:</value>
  </data>
  <data name="P3-Title" xml:space="preserve">
    <value>Selección de línea</value>
  </data>
  <data name="P4-SelectDestinationStop" xml:space="preserve">
    <value>Por favor, selecciona la parada donde deseas bajarte.</value>
  </data>
  <data name="P4-Title" xml:space="preserve">
    <value>Parada final</value>
  </data>
  <data name="P4-TravelConfirmPrompt" xml:space="preserve">
    <value>¿Confirmas que quieres viajar de {0} a {1} usando la línea {2}?</value>
  </data>
  <data name="P5-ByLineLabel" xml:space="preserve">
    <value>Con la línea:</value>
  </data>
  <data name="P5-RouteStatusLabel" xml:space="preserve">
    <value>Estado de la ruta</value>
  </data>
  <data name="P5-RouteSummaryLabel" xml:space="preserve">
    <value>Resumen de la ruta</value>
  </data>
  <data name="P5-Title" xml:space="preserve">
    <value>En ruta</value>
  </data>
  <data name="P5-ToLabel" xml:space="preserve">
    <value>A:</value>
  </data>
  <data name="P5-TravellingFromLabel" xml:space="preserve">
    <value>Viajando desde:</value>
  </data>
  <data name="RoutesGettingError" xml:space="preserve">
    <value>Las líneas no se han podido descargar, por favor, comprueba tu conexión.</value>
  </data>
  <data name="StatusPh1Incoming" xml:space="preserve">
    <value>Autobús llegando a la parada de origen.</value>
  </data>
  <data name="StatusPh1InTransit" xml:space="preserve">
    <value>Autobús de camino a la parada de origen.</value>
  </data>
  <data name="StatusPh2IncomingDestination" xml:space="preserve">
    <value>Llegando a la parada final.</value>
  </data>
  <data name="StatusPh2IntransitDestination" xml:space="preserve">
    <value>De camino a la parada final.</value>
  </data>
  <data name="StatusPh2RemainingStops" xml:space="preserve">
    <value>En ruta. Quedan {0} paradas. La siguiente parada es {1}</value>
  </data>
  <data name="StatusWaitingIncomingBus" xml:space="preserve">
    <value>Esperando autobús.</value>
  </data>
  <data name="StopCode" xml:space="preserve">
    <value>Código de la parada.</value>
  </data>
  <data name="StopCodeHelpText" xml:space="preserve">
    <value>Indica aquí el código de la parada de origen y pulsa "Aceptar".</value>
  </data>
  <data name="StopNotFoundError" xml:space="preserve">
    <value>Parada no encontrada</value>
  </data>
  <data name="SummaryLine" xml:space="preserve">
    <value>Linea:</value>
  </data>
  <data name="SummaryOriginStop" xml:space="preserve">
    <value>Parada de origen:</value>
  </data>
</root>